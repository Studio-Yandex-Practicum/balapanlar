version: '3.8'

services:

  db:
    image: postgres:13.0-alpine
    volumes:
      - /var/lib/postgresql/data/
    container_name: 'db'
    env_file:
      - ./.env

  backend:
    # image: тут будет образ из Docker
    build:
      context: ../backend
      dockerfile: Dockerfile
    restart: always
    command: gunicorn balapanlar.wsgi:application -b 0:80 --pythonpath /app
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    container_name: 'backend'
    env_file:
      - ./.env

  frontend:
    # image: тут будет образ из Docker
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/build:/app/result_build/
    container_name: 'frontend'

  nginx:
    image: nginx:1.19.3

    ports:
      - "80:80"

    restart: always

    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build/dist:/usr/share/nginx/html/
      - ./docs/:/usr/share/nginx/html/api/docs
      - static_value:/var/html/static/
      - media_value:/var/html/media/

    depends_on:
      - backend

    container_name: 'nginx'

volumes:
  static_value:
  media_value:
